<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>parser - Tag - drumato.com</title>
        <link>http://drumato.com/tags/parser/</link>
        <description>parser - Tag - drumato.com</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 10 Apr 2022 00:00:00 &#43;0000</lastBuildDate><atom:link href="http://drumato.com/tags/parser/" rel="self" type="application/rss+xml" /><item>
    <title>Go Parser Combinator with Go Generics</title>
    <link>http://drumato.com/posts/peachcomb/</link>
    <pubDate>Sun, 10 Apr 2022 00:00:00 &#43;0000</pubDate><author>
        <name>Drumato</name>
    </author><guid>http://drumato.com/posts/peachcomb/</guid>
    <description><![CDATA[Maybe this post will be old cuz I&rsquo;m developing peachcomb actively!
This post introduces a Go parser-library that is being developed by me, called peachcomb . this library is aimed to reduce overhead with dynamically dispatching, and notify mismatching among parsers. To achieve them, I use Go Generics in peachcomb. Go Generics was released in Go 1.18.
https://github.com/Drumato/peachcomb
https://pkg.go.dev/github.com/Drumato/peachcomb
This post won&rsquo;t describe the detail of Go Generics. I&rsquo;ll recommend you this tutorial to understand Go Generics briefly.]]></description>
</item></channel>
</rss>
